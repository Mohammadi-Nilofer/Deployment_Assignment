# -*- coding: utf-8 -*-
"""Car.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Hy3wQRzGOGyxjUh3nLHU7OcEOqyFhBS5
"""

import streamlit as st
import numpy as np
import pickle

# Load the model
with open('catboost_regressor.pkl', 'rb') as f:
    model = pickle.load(f)

# Streamlit UI
st.title("Car Price Prediction Web App")
st.write("üîç This app uses a Catboost Regressor model to predict Car Price.")

brand = st.sidebar.selectbox('Brand', ['Kia', 'Chevrolet', 'Mercedes', 'Audi', 'Volkswagen', 'Toyota',
                                       'Honda', 'BMW', 'Hyundai', 'Ford'])
model_name = st.sidebar.selectbox('Model',['Rio', 'Malibu', 'GLA', 'Q5', 'Golf', 'Camry', 'Civic', 'Sportage',
                                           'RAV4', '5 Series', 'CR-V', 'Elantra', 'Tiguan', 'Equinox',
                                           'Explorer', 'A3', '3 Series', 'Tucson', 'Passat', 'Impala',
                                           'Corolla', 'Optima', 'Fiesta', 'A4', 'Focus', 'E-Class', 'Sonata',
                                           'C-Class', 'X5', 'Accord'] )
year = st.sidebar.number_input('Year', min_value=2000, max_value=2023, value=2020)
engine_size = st.sidebar.number_input('Engine Size', min_value=0.5, max_value=5.0, step=0.1, value=2.0)
fuel_type = st.sidebar.selectbox('Fuel Type',[ 'Diesel','Hybrid','Electric','Petrol'])
transmission = st.sidebar.selectbox('Transmission',['Manual','Automatic','Semi-Automatic'])
mileage = st.sidebar.number_input('Mileage', min_value=0, value=50000)
doors = st.sidebar.number_input('Number of Doors', min_value=2, max_value=5, value=4)
owner_count = st.sidebar.number_input('Owner Count', min_value=1, value=1)

# Button to predict
if st.button("Predict Car Price"):
    input_data = np.array([[
	    brand,
	    model_name,
	    year,
	    engine_size,
	    fuel_type,
	    transmission,
	    mileage,
	    doors,
	    owner_count
    ]])

	  #Prediction
    prediction = model.predict(input_data)
    predicted_price = round(prediction[0], 2)
    st.subheader(f'Predicted Car Price: ${predicted_price}')
